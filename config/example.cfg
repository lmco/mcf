{
  // ************************* Authorization Parameters ************************
  //
  // The following parameters are used in order to configure the authorization
  // and security of the MBEE application.
  "auth": {

    // The authentication strategy used for authentication. This must be a valid
    // javascript file and must be located in the app/auth/ directory. The strategy
    // is required to implement the handleBasicAuth, handleTokenAuth, and doLogin.
    // functions.
    "strategy": "local-ldap-strategy",

    // For strategies that require authentication via LDAP-AD.
    "ldap": {

      // The URL which is hosting the lDAP service.
      "url": "ldap://your-ldap-server.com",

      // The port which the LDAP server is listening on.
      "port": "389",

      // The file location of any Certificate files which are required to authenticate
      // with the LDAP server. Single and multiple files should be listed as an array.
      "ca": [
        "path/to/your/cert1.pem"
      ],

      // The user credentials required for authentication.
      "bind_dn": "your-bind-dn",

      // The password credentials required for authentication.
      "bind_dn_pass": "your-bind-password",

      // The base of the LDAP directory.
      "base": "your-ldap-base",

      // The filter used for the LDAP query.
      // NOTE: Any characters which require a back slash as an escape character
      // must be prefaced with two backslashes.
      "filter": "your-ldap-filter",

      // The attribute for username, first name, last name, and email within the LDAP server.
      "attributes": {
        "username": "accountUsername",
        "firstName": "givenFirstName",
        "preferredName": "preferredFirstName",
        "lastName": "lastName",
        "eMail": "emailAddress"
      }
    },


    // ************************* Token & Session Parameters ************************
    //
    // The following parameters are used in order to configure the use of tokens.
    // "expires" is the time length for expiration of a token and "units" is the
    // unit of time for "expires" (valid options are MILLISECONDS, SECONDS,
    // MINUTES, HOURS, DAYS).
    "token": {
      "expires": 10,
      "units": "MINUTES"
    },
    // The following parameters are used in order to configure the use of sessions.
    // "expires" is the time length for expiration of a session and "units" is the
    // unit of time for "expires" (valid options are MILLISECONDS, SECONDS,
    // MINUTES, HOURS, DAYS).
    "session": {
      "expires": 30,
      "units": "MINUTES"
    }
  },

  // ************************* Database Parameters *************************
  //
  // The following parameters are used in order to configure the database used by MBEE.
  // MBEE currently only supports MongoDB as it's database.
  "db": {
    // The URL used to connect you your database instance.
    "url": "your-db-url.com",

    // The port which your database is listening on.
    "port": "27017",

    // The name of the database within your instance of MongoDB.
    "name": "your-db-name",

    // The username and password used to authenticate against your database.
    // These may be left as empty strings or removed if no authentication is required.
    "username": "your-db-user",
    "password": "your-db-pass",

    // A boolean indicating whether or not ssl is used for the database authentication.
    "ssl": true,

    // The location of the ssl certificate if ssl is set to true.
    "ca": "your/ssl/cert.pem"
  },


  // ************************* Docker Parameters *************************
  //
  // The following parameters are used in order to configure the docker build used by MBEE.
  // These setting will only be used for the 'node mbee docker' commands.
  "docker": {
    // The name of the image the container will be deployed with.
    "image": {
      "name": "your-image-name"
    },
    // The name of the container that docker will build.
    "container": {
      "name": "your-container-name"
    },
    // The port information which the container will listen on for incoming http requests.
    "http": {
      // A boolean to indicate if server will listen for http requests.
      "enabled": true,
      // The port which will listen for http requests if they are enabled.
      "port": 6233
    },
    // The port information which the container will listen on for incoming https requests.
    "https": {
      // A boolean to indicate if server will listen for https requests.
      "enabled": true,
      // The port which will listen for https requests if they are enabled.
      "port": 6234
    },
    // The location of the docker files used to build the configuration file.
    // Relative to MBEE root directory.
    "Dockerfile": "./config/Dockerfile"
  },

  // ************************* Log Parameters *************************
  //
  // The following parameters are used in order to configure the log output used by
  // the running instance of MBEE.
  "log": {
    // The level of log info which will be displayed on the console and written to the log file.
    // Options: critical, error, warn, info, verbose, debug
    "level": "error",
    // The directory which contains the log files.
    "dir": "logs",
    // The file location relative to the MBEE root directory which will contain the
    // above log level data.
    "file": "logs/mbee.log",
    // The file location relative to the main MBEE root directory which will
    // contain error level log data.
    "error_file": "logs/mbee-error.log",
    // The file location relative to the main MBEE root directory which will
    // contain debug level log data.
    "debug_file": "logs/mbee-debug.log",
    // A boolean which indicates whether or not to color the output of the log
    // data to both the console and the log files.
    "colorize": true
  },

  // ************************* Server Parameters *************************
  //
  // The following parameters are used in order to configure the server which MBEE
  // is hosted on.
  "server": {
    // Default admin user credentials
    "defaultAdminUsername": "admin",
    "defaultAdminPassword": "Admin12345",
    // Default shared organization
    "defaultOrganizationId" : "default",
    "defaultOrganizationName" : "default",

    // The http information which directory relates to node.
    // NOTE: If hosting directly from node, this is the port which MBEE will
    // listen to. If application is instead being hosted as a docker container,
    // this port will be routed to the port for the docker container which
    // is configured above.
    "http": {
      // Boolean indicating if http will be enabled for the application.
      "enabled": true,
      // The port to listen for http requests on.
      "port": 6233
    },

    // The https information which directory relates to node.
    // NOTE: If hosting directly from node, this is the port which MBEE will
    // listen to. If application is instead being hosted as a docker container,
    // this port will be routed to the port for the docker container which
    // is configured above.
    "https": {
      // Boolean indicating if http will be enabled for the application.
      "enabled": true,
      // The port to listen for https requests on.
      "port": 6234,
      // If https is enabled, the name of the ssl cert which will be used for
      // hosting the secure connection.
      "sslCert": "path/to/your/ssl/cert.crt",
      "sslKey": "path/to/your/ssl/key.key"
    },

    // The API routes can be enabled or disabled based on the desired configuration.
    "api": {
      // A boolean to indicate whether or not API routes are enabled.
      "enabled": true,
      // If enabled, the API will return JSON with the following indent size in spaces.
      "json": {
        "indent": 4
      },
      // A boolean to indicate whether or not specific User API routes are enabled.
      "userAPI": {
        "get": true,
        "post": true,
        "patch": true,
        "delete": true
      }
    },

    // The following parameters are used to import any plugins that are used in
    // your MBEE application. IMPORTANT: Plugins run natively in the application
    // and have direct access to the core MBEE framework. As a result, plugins
    // have the same security permissions as the MBEE application itself. This
    // design allows for efficient performance among many data heavy processing
    // plugins. However it poses a security risk for any plugin which has not
    // been properly vetted. The server admin MUST make sure the plugin they are
    // using does not pose any security risk the the MBEE application before
    // importing them.
    "plugins": {
      // A boolean to indicate whether or not plugins are enabled.
      "enabled": false,
      // The location of the certificate relative to the main MBEE location
      "ca": "your/cert/location.pem",
      // The array of plugins which will be imported and mounted into the MBEE application
      // Parameters: name, source, deployKey, version
      "plugins": [
          {
            "name": "your-plugin-name",
            "source": "https://github.com/path-to-your-plugin.git",
            "deployKey": "path/to/your/key.key",
            "version": 1.0
          }]
    },

    // The UI routes can be enabled or disabled based on the desired configuration.
    "ui": {
      // A boolean to indicate whether or not the UI is enabled.
      "enabled": true,
      // The UI can display a banner statement. The following parameters are
      // used to set up the banner.
      "banner": {
        // A boolean to indicate whether or not the banner is enabled.
        "on": false,
        // The message for the banner.
        "message": "Your Banner",
        // The color of the banner in Hex or RGB.
        "color": "#FFF",
        // The background of the banner in Hex or RGB.
        "background": "rgb(0, 52, 120)",
        // A boolean to indicate whether the banner is bold or not.
        "bold": true,
        // The CSS definition of the border to be added to the banner.
        "border": "1px solid #656565"
      }
    },
    // The server secret used for encrypting and decrypting server sessions and
    // tokens. NOTE: If 'RANDOM', the secret will be auto-generated.
    "secret": "RANDOM"
  },


  // ************************* Test Parameters *************************
  //
  // The following parameters are used in order to configure the MBEE application during
  // The following parameters are used in order to configure the MBEE application during
  // testing. This applies only to the application when 'node mbee test' is run.
  "test": {
    // The certificate used in the API tests, relative to root MBEE directory.
    "ca": "path/to/your/cert.pem",
    // The URL used for API tests. NOTE: The server must be running.
    "url": "http://localhost:6223"
  }
}
