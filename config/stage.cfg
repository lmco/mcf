{
  // ************************* Authorization Parameters ************************
  //
  // The following parameters are used in order to configure the authorization
  // and security of the MBEE application.
  "auth": {

    // The authentication strategy used for authentication. This must be a valid
    // javascript file and must be located in the app/auth/ directory. The strategy
    // is required to implement the handleBasicAuth, handleTokenAuth, and doLogin.
    // functions.
    "strategy": "LMICloudStrategy",

    // For strategies that require authentication via LDAP-AD.
    "ldap": {

      // The URL which is hosting the lDAP service.
      "url": "ldaps://usadc43.us.lmco.com",

      // The port which the LDAP server is listening on.
      "port": "3269",

      // The file location of any Certificate files which are required to authenticate
      // with the LDAP server. Single and multiple files should be listed as an array.
      "ca": [
        "./certs/LockheedMartinRootCertificationAuthority.pem",
        "./certs/LockheedMartinRootCertificationAuthority2.pem",
        "./certs/LockheedMartinRootCertificationAuthority3.pem"
      ],

      // The user credentials required for authentication.
      "bind_dn": "mbee-query@us.lmco.com",

      // The password credentials required for authentication.
      "bind_dn_pass": "SuaIZh4oIPCRD9g",

      // The base of the LDAP directory.
      "base": "DC=us,DC=lmco,DC=com",

      // The filter used for the LDAP query.
      // NOTE: The filter is imported as additional query parameters inside of an "AND" LDAP query. For example, the
      // following is how the filter will end up querying the server.
      // (&(preDefinedParams)<filterFromConfigurationFile>)
      // In order to build a proper query, the additional queries must be surrounded by parentheses individually.
      // EX: "(objectClass=user)(memberOf=CN=list\\, devs,OU=group,DC=company,DC=com)"
      // NOTE: Any characters which require a back slash as an escape character must be prefaced with two
      // backslashes.
      "filter": "(objectClass=person)(memberOf=CN=dl-SSC\\, MBEE-Developers,OU=DistributionLists,OU=LMXpress,OU=EntOpr,DC=us,DC=lmco,DC=com)",

      // The attribute for username, first name, last name, and email within the LDAP server.
      "attributes": {
        "username": "sAMAccountName",
        "firstName": "givenName",
        "preferredName": "lmcPreferredFirstName",
        "lastName": "sn",
        "eMail": "mail"
      }
    },


    // ************************* Token & Session Parameters ************************
    //
    // The following parameters are used in order to configure the use of both tokens
    // and sessions for local authentication strategies.
    "token": {

      // The time length for expiration of a token.
      "expires": 10,

      // The unit of the above time length.
      // Options: MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS
      "units": "MINUTES"
    },
    "session": {

      // The time length for expiration of a session.
      "expires": 30,

      // The unit of the above time length.
      // Options: MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS
      "units": "MINUTES"
    }
  },


  // ************************* Database Parameters *************************
  //
  // The following parameters are used in order to configure the database used by MBEE.
  // MBEE currently only supports MongoDB as it's database.
  "db": {
    // The URL used to connect you your database instance.
    "url": "dev.mbee.us.lmco.com",

    // The port which your database is listening on.
    "port": "27017",

    // The name of the database within your instance of MongoDB.
    "name": "stage",

    // The username and password used to authenticate against your database.
    // These may be left as empty strings or removed if no authentication is required.
    "username": "mbee",
    "password": "relativeUniverse141",

    // A boolean indicating whether or not ssl is used for the database authentication.
    "ssl": true,

    // The location of the ssl certificate if ssl is set to true.
    "ca": "./LockheedMartinRootCertificationAuthority.pem"
  },


  // ************************* Docker Parameters *************************
  //
  // The following parameters are used in order to configure the docker build used by MBEE.
  // These setting will only be used for the node mbee docker commands.
  "docker": {
    // The name of the image the container will be deployed with.
    "image": {
      "name": "mbee"
    },
    // The name of the container that docker will build.
    "container": {
      "name": "mbee-dev"
    },
    // The port information which the container will listen on for incoming http requests.
    "http": {
      // A boolean to indicate if server will listen for http requests.
      "enabled": true,
      // The port which will listen for http requests if they are enabled.
      "port": 9080
    },
    // The port information which the container will listen on for incoming https requests.
    "https": {
      // A boolean to indicate if server will listen for https requests.
      "enabled": true,
      // The port which will listen for https requests if they are enabled.
      "port": 9443
    },
    // The location of the docker files used to build the configuration file. Relative main MBEE directory.
    "Dockerfile": "./config/Dockerfile"
  },


  // ************************* Log Parameters *************************
  //
  // The following parameters are used in order to configure the log output used by
  // the running instance of MBEE.
  "log": {
    // The level of log info which will be displayed on the console and written to teh log file.
    // Options: critical, error, warn, info, verbose, debug
    "level": "info",
    // The directory which will does/will contain the log files
    "dir": "logs",
    // The file location relative to the main MBEE directory which will write the above log level data.
    "file": "mbee.log",
    // The file location relative to the main MBEE directory which will write error level log date.
    "error_file": "mbee-error.log",
    // The file location relative to the main MBEE directory which will write debug level log date.
    "debug_file": "mbee-debug.log",
    // A boolean which indicates whether or not to color the output of the log data to both the console
    // and the log files.
    "colorize": false
  },


  // ************************* Server Parameters *************************
  //
  // The following parameters are used in order to configure the server which MBEE
  // is hosted on.
  "server": {
    // The http information which directory relates to node.
    // NOTE: If hosting directly from node, this is the port which MBEE will listen to.
    // If application is instead being hosted as a docker container, this port will be routed
    // to the port for the docker container which is configured above.
    "http": {
      // Boolean indicating if http will be enabled for the application.
      "enabled": true,
      // The port to listen for http requests on.
      "port": 9080
    },

    // The https information which directory relates to node.
    // NOTE: If hosting directly from node, this is the port which MBEE will listen to.
    // If application is instead being hosted as a docker container, this port will be routed
    // to the port for the docker container which is configured above.
    "https": {
      // Boolean indicating if http will be enabled for the application.
      "enabled": true,
      // The port to listen for https requests on.
      "port": 9443,
      // If https is enable, the name of the ssl cert which will be used for hosting the secure connection.
      "sslCertName": "dev.mbee.us.lmco.com"
    },

    // The API routes can be enabled or disable based on the desired configuration.
    // The functions are still available for internal application use however the routes
    // themselves will not be accessible to any outside requests. The following parameters outline
    // additional settings for these routes
    "api": {
      // A boolean to indicate whether or not API routes are enabled.
      "enabled": true,
      // if enabled, the api will return json with the following indent size in spaces.
      "json": {
        "indent": 4
      },
      // The following will enable to disable the user API route methods. These are useful when using authentication
      // strategies where users should not be managed using the user API route.
      "userAPI": {
        "get": true,
        "post": true,
        "patch": true,
        "delete": true
      }
    },
    // The base url which the api routes weill be appended onto
    "apiUrl": "/",

    // The following parameters are used to import any plugins that are used in your MBEE application.
    // IMPORTANT: Plugins run natively in the application and have direct access to the core MBEE framework.
    // As a result, plugins have the same security permissions as the MBEE application itself.
    // This design allows for efficient performance among many data heavy processing plugins. However it poses
    // a security risk for any plugin which has not been properly vetted. The user MUST make sure the plugin
    // they are using does not pose any security risk the the MBEE application before importing them.
    "plugins": {
      // A boolean to indicate whether or not plugins are enabled.
      "enabled": true,
      // The array of plugins which will be imported and mounted into the MBEE application
      // Parameters: name, source, key
      "plugins": []
    },

    // The UI routes can be enabled or disable based on the desired configuration.
    // The functions are still available for internal application use however the routes
    // themselves will not be accessible to any outside requests. The following parameters outline
    // additional settings for these routes
    "ui": {
      // A boolean to indicate whether or not the UI is enabled.
      "enabled": true,
      // The UI can display a banner statement. The following parameters are used to set up the banner.
      "banner": {
        // A boolean to indicate whether or not the banner is enabled.
        "on": false,
        // The message for the banner.
        "message": "Lockheed Martin Proprietary Information",
        // The color of the banner in Hex.
        "color": "#FFF",
        // The background of the banner in rgb.
        "background": "rgb(0, 52, 120)",
        // A boolean to indicate whether or not the banner is bold or not.
        "bold": true,
        // The border to be added to the banner
        "border": "1px solid #656565"
      }
    },
    "secret": "RANDOM"
  },


  // ************************* Test Parameters *************************
  //
  // The following parameters are used in order to configure the MBEE application during
  // testing. This applies only to the application when 'node mbee test' is run.
  "test": {
    // The URL, including port number which the tests will be ran against
    "url": "https://dev.mbee.us.lmco.com:9443",
    // The location of the certification file relative to the main MBEE folder
    "ca": "./certs/LockheedMartinRootCertificationAuthority.pem",
    // An integer which indicated whether or not to accept self signed certificates.
    // IMPORTANT: 0 means enable self signed certificates. 1 means disabled
    "NODE_TLS_REJECT_UNAUTHORIZED": "0",
    // The username of the user to authenticate and run tests with
    "username": "mbee",
    // The password of the user to authenticate and run tests with
    "password": "t1QAx&hICyQSg)|"
  },


  // ************************* Yarn Parameters *************************
  //
  // The following parameters are used in order to configure the MBEE application during
  // building. This applies only to the application when 'node mbee build' is run.
  "yarn": {
    // The proxy parameter for http requests
    "http-proxy":  "http://proxy-lmi.global.lmco.com",
    // The proxy parameter for https requests
    "https-proxy": "http://proxy-lmi.global.lmco.com",
    // The location of the certification file relative to the main MBEE folder
    "cafile":      "./certs/LockheedMartinRootCertificationAuthority.pem",
    // A boolean to indicate whether strict ssl is enabled for yarn.
    "strict-ssl":  "false"
  }
}
