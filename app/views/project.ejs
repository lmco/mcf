<%
const org = project.org;
const members = project.permissions.read;
%>

<div class="container mbee-project">

  <nav aria-label="breadcrumb">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="/">Home</a></li>
      <li class="breadcrumb-item"><a href="/<%= org.id%>"><%= org.name%></a></li>
      <li class="breadcrumb-item active" aria-current="page"><%= project.name%></li>
    </ol>
  </nav>

  <hr class="mb-4">

  <div class="project-header">
    <h1 class="display-4"><%= project.name%></h1>
    <% if (user.admin || project.permissions.admin.map(u => u.username).includes(user.username)) { %>
    <a href="/<%=org.id%>/<%=project.id%>/edit" class="btn btn-outline-warning" role="button"> edit </a>
    <% } %>
  </div>

  <h3 id="elements" class="mt-3">Elements</h3>

  <div class="element-tree-container">
  <% if (elements) { %>

    <%- include('element-tree-render', {root: elements} ) %>

  <% } else { %>
    <p> This project does not currently contain any elements</p>
  <% } %>
</div>


  <h3 id="members" class="mt-5">Members</h3>

  <% if (members.length > 0) { %>
  <ul class="mbee-list">
    <% for (let i = 0; i < members.length; i++) { %>

    <li class="mbee-list-item">

      <div class="member-list-item">

        <div class="member-list-title">
          <i class="fas fa-users icon-close">
          </i>
          <span><%=members[i].name%></span>
        </div>

        <div class="member-list-stats">
          <div class="member-list-stats-email">
            <i class="fas fa-envelope"
                 data-toggle="tooltip"
                 data-placement="top"
                 title="Email">
            </i>
            <span><%= members[i].email%></span>
          </div>
        </div>
      </div>

    </li>
    <% } %>
  </ul>

  <% } else { %>
  <p> This project does not contain any members</p>
  <% } %>



</div>

<div id="tree-sidebar-view" class="tree-sidebar">
  <div class ="element-header">
    <i class="fas fa-times close-tree-sidebar"></i>
    <i class="fas fa-project-diagram"></i>
    <h2> Element Details</h2>
  </div>
  <div class="element-content">
    <hr>
    <div class="element-item">
      <div class="element-key">
        <span class="element-item-name-key">Name:</span>
      </div>
      <div class="element-value">
        <span class="element-item-name-value">Loading...</span>
      </div>
    </div>
    <hr>

    <div class="element-item">
      <div class="element-key">
        <span class="element-item-id-key">ID:</span>
      </div>
      <div class="element-value">
        <span class="element-item-id-value">Loading...</span>
      </div>
    </div>
    <hr>

    <div class="element-item">
      <div class="element-key">
        <span class="element-item-parent-key">Parent:</span>
      </div>
      <div class="element-value">
        <span class="element-item-parent-value">Loading...</span>
      </div>
    </div>
    <hr>

    <div class="element-item">
      <div class="element-key">
        <span class="element-item-created-key">Created On:</span>
      </div>
      <div class="element-value">
        <span class="element-item-created-value">Loading...</span>
      </div>
    </div>
    <hr>

    <div class="element-item">
      <div class="element-key">
        <span class="element-item-updated-key">Last Updated:</span>
      </div>
      <div class="element-value">
        <span class="element-item-updated-value">Loading...</span>
      </div>
    </div>
    <hr>

    <div class="element-item">
      <div class="element-key">
        <span class="element-item-custom-key">Custom:</span>
      </div>
      <div class="element-value">
        <span class="element-item-custom-value">Loading...</span>
      </div>
    </div>
    <hr>

    <div class="element-item">
      <div class="element-key">
        <span class="element-item-documentation-key">Documentation:</span>
      </div>
      <div class="element-value">
        <span class="element-item-documentation-value">Loading...</span>
      </div>
    </div>
    <hr>
    <div class="element-item">
      <button id="edit-element-btn" class="btn btn-outline-warning"> edit </button>
    </div>
  </div>
</div>


<div id="tree-sidebar-edit" class="tree-sidebar">
  <div class ="element-header">
    <i class="fas fa-times close-tree-sidebar"></i>
    <i class="fas fa-project-diagram"></i>
    <h2> Edit Element</h2>
  </div>
  <div class="tree-sidebar-form">
    <form>
      <div class="form-group">
        <label for="name">Element Name</label>
        <input class="form-control" id="edit-name" aria-describedby="emailHelp" placeholder="Organization Name" value="Loading...">
        <div class="invalid-feedback">
          Invalid: A model name may only contain letters, numbers, space, or dashes
        </div>
      </div>
      <div id="form-custom" class="form-group">
        <label for="custom">Custom Data</label>
        <textarea class="form-control" id="edit-custom" rows="6" placeholder="Custom Data"> Loading... </textarea>
        <div class="invalid-feedback">
          Invalid: Custom data must be valid JSON
        </div>
      </div>
      <div id="form-documentation" class="form-group">
        <label for="documentation">Documentation</label>
        <textarea class="form-control" id="edit-documentation" rows="6" placeholder="Documentation Data"> Loading... </textarea>
        <div class="invalid-feedback">
          Invalid: The provided documentation is invalid
        </div>
      </div>
      <button id="subitForm"  type="button" class="btn btn-primary">Save</button>
      <button id="cancelForm" type="button" class="btn btn-secondary">Cancel</button>
    </form>
  </div>

</div>

<%- contentFor('scripts') %>
<script>

  let selectedElementData = null

  $(document).ready(function() {
    $('#edit-element-btn').click(function() {
      $('#tree-sidebar-view').removeClass('tree-sidebar-active');
      $('#tree-sidebar-edit').addClass('tree-sidebar-active');
    });

    $('.close-tree-sidebar').click(function() {
      $('#tree-sidebar-view').removeClass('tree-sidebar-active');
      $('#tree-sidebar-edit').removeClass('tree-sidebar-active');
    });

    $('#cancelForm').click(function() {
      $('#tree-sidebar-view').addClass('tree-sidebar-active');
      $('#tree-sidebar-edit').removeClass('tree-sidebar-active');
      $(`#${selectedElementData.url}`.split('\/').join('\\/')).trigger('click')
    });


    $('.element-title').click(function() {
      $('#tree-sidebar-view').addClass('tree-sidebar-active');
      $('.element-item-name-value').html('Loading...');
      $('.element-item-id-value').html('Loading...');
      $('.element-item-parent-value').html('Loading...');
      $('.element-item-created-value').html('Loading...');
      $('.element-item-updated-value').html('Loading...');
      $('.element-item-custom-value').html('Loading...');
      $('.element-item-documentation-value').html('Loading...');
      const url = $(this).attr('id')
      jQuery.get(url , function(data) {
        $('.element-item-name-value').html(data.name || 'No Name Provided');
        $('#edit-name').val(data.name).trigger('change');
        $('.element-item-id-value').html(data.id || 'No ID Provided');
        $('.element-item-parent-value').html((data.parent) ? data.parent.name : 'No Parent.');
        $('.element-item-created-value').html(data.createdOn || 'No Date Provided');
        $('.element-item-updated-value').html(data.updatedOn || 'No Date Provided');
        $('.element-item-custom-value').html(JSON.stringify(data.custom, null, 2) || 'No Custom Data.');
        $('#edit-custom').val(JSON.stringify(data.custom, null, 2) || '').trigger('change');
        $('.element-item-documentation-value').html(data.documentation || 'No ' +
          'Documentation.');
        $('#edit-documentation').val(data.documentation || '' ).trigger('change');

        selectedElementData = {
          id: data.id || null,
          name: data.name || null,
          url: url
        }

        console.log(selectedElementData)
      });
    });

    const nameRegex = /<%= validators.name %>/

    $('#edit-name').on('input', function() {
      if (nameRegex.test($(this).val())) {
        $(this).removeClass('is-invalid')
      }
      else {
        $(this).addClass('is-invalid')
      }
    })

    $('#edit-custom').on('input', function() {
      try {
        JSON.parse($("#edit-custom").val())
        $(this).removeClass('is-invalid')
      }
      catch {
        $(this).addClass('is-invalid')
      }
    })

    $('#subitForm').click(function() {
      if (!nameRegex.test($('#edit-name')
      .val())) {
        $('#edit-name')
        .effect('shake')
        return
      }
      try {
        JSON.parse($('#edit-custom')
        .val())
      }
      catch {
        $('#edit-custom')
        .effect('shake')
        return
      }
      jQuery.ajax({
        method: 'PATCH',
        url: selectedElementData.url,
        data: {
          name: $('#edit-name').val(),
          custom: JSON.parse($('#edit-custom').val()),
          documentation: $('#edit-documentation').val()
        }
      })
      .done(function(msg, status) {
        $(`#${selectedElementData.url}`.split('\/').join('\\/')).trigger('click')
        $(`#${selectedElementData.url}`.split('\/').join('\\/')).children('span').html($('#edit-name').val())
        $('#tree-sidebar-view').addClass('tree-sidebar-active');
        $('#tree-sidebar-edit').removeClass('tree-sidebar-active');
      })
      .fail(function(msg) {
        $('#save-warning')
        .modal('show');
      });
    });
  });


  function toggleClosed(itemClass) {
    const elementList = document.getElementsByClassName(itemClass)
    for (let i = 0; i < elementList.length; i++) {
      elementList[i].classList.toggle("closed");
    }
  };
</script>
