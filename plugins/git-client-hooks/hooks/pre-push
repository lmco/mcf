#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

COMMIT_MSG=`git log -1 --pretty=%B | grep -v "^$"`

git log -1 --pretty=%B | grep '\(References\|Refs\|Ref\) #[0-9]\{1,16\}' 
if [ $? -ne 0 ]; then
	echo >&2 "Commit does not reference an issue."
	exit 1
fi

# TODO - The following curl command can be used to query a list of open issues.
#curl --header "PRIVATE-TOKEN: <YOUR_TOKEN>" https://gitlab.lmms.lmco.com/api/v4/projects/1953/issues\?status\=opened

exit 0
