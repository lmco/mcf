variables:
  HTTP_PROXY: http://proxy3.lmco.com:80
  HTTPS_PROXY: http://proxy3.lmco.com:80
  http_proxy: http://proxy3.lmco.com:80
  https_proxy: http://proxy3.lmco.com:80
  NO_PROXY: 127.0.0.1,localhost
  GIT_SSL_NO_VERIFY: "true"
  GIT_STRATEGY: clone
  MBEE_ENV: pipeline

stages:
  - Build
  - Test
  - Docker
  - Deploy

Build MCF:
  stage: Build
  tags:
    - docker
  image: registry.gitlab.us.lmco.com:443/mbx/mbee/mcf/gitlab-docker-build-image:latest
  before_script:
    - export HTTP_PROXY=http://proxy3.lmco.com:80
    - export HTTPS_PROXY=http://proxy3.lmco.com:80
    - export NO_PROXY=127.0.0.1,localhost
    - yarn config set strict-ssl false
    - yarn config set proxy http://proxy3.lmco.com:80
    - yarn config set https-proxy http://proxy3.lmco.com:80
    - yarn config set no_proxy 127.0.0.1,localhost
  script:
    - NOPREINSTALL=1 yarn install
    - node mbee lint

Test MCF:
  stage: Test
  artifacts:
    paths:
    - node_modules
    - yarn.lock
    - build
    - plugins
    expire_in: 1h
  tags:
    - docker
  image: registry.gitlab.us.lmco.com:443/mbx/mbee/mcf/gitlab-docker-build-image:latest
  services:
    - name: registry.gitlab.us.lmco.com:443/mbx/mbee/mcf/mongo:4.0.4
      alias: mongodb
  before_script:
    - export HTTP_PROXY=http://proxy3.lmco.com:80
    - export HTTPS_PROXY=http://proxy3.lmco.com:80
    - export NO_PROXY=127.0.0.1,localhost
    - yarn config set strict-ssl false
    - yarn config set proxy http://proxy3.lmco.com:80
    - yarn config set https-proxy http://proxy3.lmco.com:80
    - yarn config set no_proxy 127.0.0.1,localhost
    - NOPREINSTALL=1 yarn install
    - node mbee migrate -y
  script:
    - nohup node mbee start &
    - sleep 20
    - node mbee test --all

Test Plugins:
  stage: Test
  tags:
    - docker
  image: registry.gitlab.us.lmco.com:443/mbx/mbee/mcf/gitlab-docker-build-image:latest
  services:
    - name: registry.gitlab.us.lmco.com:443/mbx/mbee/mcf/mongo:4.0.4
      alias: mongodb
  before_script:
    - export HTTP_PROXY=http://proxy3.lmco.com:80
    - export HTTPS_PROXY=http://proxy3.lmco.com:80
    - export NO_PROXY=127.0.0.1,localhost
    - export MBEE_ENV=pipeline
    - yarn config set strict-ssl false
    - yarn config set proxy http://proxy3.lmco.com:80
    - yarn config set https-proxy http://proxy3.lmco.com:80
    - yarn config set no_proxy 127.0.0.1,localhost
    - NOPREINSTALL=1 yarn install
    - node mbee migrate -y
    - 
  script:
    - node mbee test --plugins
    # - nohup node mbee start &
    # - sleep 60 # sleeping for 60 seconds allows all plugins to be loaded and tested

Docker Build:
  stage: Docker
  tags:
    - shell
  only:
    - develop
    - master
  dependencies: 
    - Test MCF
  script:
    - docker build -t mcf-docker -f ./config/mcf.Dockerfile .
    - docker tag mcf-docker registry.gitlab.us.lmco.com:443/mbx/mbee/mcf/mcf-docker
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN registry.gitlab.us.lmco.com:443
    - docker push registry.gitlab.us.lmco.com:443/mbx/mbee/mcf/mcf-docker:latest

Deploy MCF Dev:
  stage: Deploy
  tags:
    - docker
  image: registry.gitlab.us.lmco.com:443/mbx/mbee/mcf/mcf-kubectl:latest
  only:
    # - develop
    # - master
  dependencies: 
    - Docker Build
  script:
    - export VERSION=`cat version.txt`
    - chmod +x ./scripts/deployment/deploy-dev.sh
    - ./scripts/deployment/deploy-dev.sh $CI_PROJECT_DIR $VERSION

Deploy MCF Test:
  stage: Deploy
  tags:
    - docker
  image: registry.gitlab.us.lmco.com:443/mbx/mbee/mcf/mcf-kubectl:latest
  only:
    # - develop
    # - master
  dependencies: 
    - Docker Build
  script:
    - export VERSION=`cat version.txt`
    - chmod +x ./scripts/deployment/deploy-test.sh
    - ./scripts/deployment/deploy-test.sh $CI_PROJECT_DIR $VERSION
  
Deploy MCF Prod:
  stage: Deploy
  tags:
    - docker
  image: registry.gitlab.us.lmco.com:443/mbx/mbee/mcf/mcf-kubectl:latest
  only:
    # - develop
    # - master
  dependencies: 
    - Docker Build
  script:
    - export VERSION=`cat version.txt`
    - chmod +x ./scripts/deployment/deploy-prod.sh
    - ./scripts/deployment/deploy-prod.sh $CI_PROJECT_DIR $VERSION
